<Project>
  <!-- This project must be imported after Microsoft.VsSDK.targets -->
  <UsingTask TaskName="GetInstallationDirectoryForInstance" AssemblyFile="$(VsSDKAssemblyFile)" />
  <UsingTask TaskName="GetExtensionsPath" AssemblyFile="$(VsSDKAssemblyFile)" />
  <UsingTask TaskName="GetDeploymentPathFromVsixManifest" AssemblyFile="$(VsSDKAssemblyFile)" />

  <Import Project="$(MsBuildThisFileDirectory)VisualStudioPathFinder.targets" />

  <Target
    Name="CorrectVsixDeploymentPath"
    Condition="'$(DeployExtension)'=='true' and '$(CreateVsixContainer)'=='true'"
    DependsOnTargets="RetrieveVsIntallationPath"
    AfterTargets="GetVsixDeploymentPath" BeforeTargets="FindExistingDeploymentPath">

    <!-- Workaround: microsoft.vssdk.buildtask determines deployment path by the current launching version of visual studio, so 
    to determine path which is relative by runnable visual studio version use VsLaunchFile from custom target that determines visual studio path-->
    <PropertyGroup>
      <DeployTargetInstallationDirectory Condition="$(VsLaunchFile)!=''">$([System.IO.Directory]::GetParent($(VsLaunchFile)))</DeployTargetInstallationDirectory>
    </PropertyGroup>

    <GetExtensionsPath
      DevenvInstallationDirectory="$(DeployTargetInstallationDirectory)"
      RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)">
      <Output TaskParameter="LocalExtensionsPath" PropertyName="ExtensionsPath" />
    </GetExtensionsPath>

    <GetDeploymentPathFromVsixManifest
      Condition="Exists('$(IntermediateVsixManifest)')"
      ExtensionsPath="$(ExtensionsPath)"
      VsixManifest="$(IntermediateVsixManifest)"
      DevenvInstallationDirectory="$(DeployTargetInstallationDirectory)"
      RootSuffix="$(VSSDKTargetPlatformRegRootSuffix)">
      <Output TaskParameter="DeploymentPath" PropertyName="VsixDeploymentPath" />
      <Output TaskParameter="VsixID" PropertyName="VsixID" />
      <Output TaskParameter="VsixVersion" PropertyName="VsixVersion" />
    </GetDeploymentPathFromVsixManifest>
  </Target>
</Project>
